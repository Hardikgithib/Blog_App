[{"C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\App.js":"3","C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\components\\Login.js":"4","C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\components\\Register.js":"5","C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\services\\login.js":"6","C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\components\\Header.js":"7","C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\components\\Addpatient.js":"8"},{"size":535,"mtime":1681583469144,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1681583469104,"results":"11","hashOfConfig":"10"},{"size":1119,"mtime":1684487838347,"results":"12","hashOfConfig":"13"},{"size":2908,"mtime":1684487179249,"results":"14","hashOfConfig":"13"},{"size":4976,"mtime":1681583469463,"results":"15","hashOfConfig":"10"},{"size":190,"mtime":1681583469697,"results":"16","hashOfConfig":"10"},{"size":3447,"mtime":1684487844942,"results":"17","hashOfConfig":"13"},{"size":14450,"mtime":1684487866819,"results":"18","hashOfConfig":"13"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yzd7a3",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"l7taar",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\index.js",[],[],"C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\App.js",["46","47"],[],"C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\components\\Login.js",["48","49"],[],"import React from 'react'\r\nimport \"./Login.css\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from 'react';\r\nimport axios from 'axios'\r\nimport { useNavigate} from 'react-router-dom'\r\n\r\nimport swal from 'sweetalert';\r\nexport default function Login() {\r\n    const navigate = useNavigate()\r\n    const [user, setUser] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n    const [emailErr,setEmailErr] = useState(false)\r\n    const [passwordErr,setPasswordErr] = useState(false)\r\n\r\n    const handleChange = (e) =>{\r\n        const { name, value } = e.target\r\n        setUser({\r\n            ...user,\r\n            [name]: value,     \r\n    })\r\n    setEmailErr(false)\r\n    setPasswordErr(false)\r\n    }\r\n\r\n    const login = (e) =>{\r\n        e.preventDefault()\r\n       \r\n        const eRegex= /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/\r\n        const pwdRegex=/^(?=.{8,})(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).*$/\r\n        if (user.email === \"\" || !eRegex.test(user.email)) {\r\n            setEmailErr(true)\r\n            \r\n        }\r\n        else if (user.password === \"\" || !pwdRegex.test(user.password)) {\r\n            setPasswordErr(true)\r\n           \r\n        }\r\n        else\r\n        {\r\n            axios.post('http://localhost:8081/login',user,{ validateStatus: false }).then((res)=>{\r\n            if (res.data.statusCode === 200) {\r\n               \r\n                const record = localStorage.setItem('token', res.data.data.token) // storing token in local storage\r\n               \r\n                const user = localStorage.setItem('user', JSON.stringify(res.data.data)) // mapping user details\r\n                navigate('/Addpatient')\r\n                swal(res.data.message,\"success\")\r\n\r\n            } else {\r\n                swal(res.data.message)\r\n            }       \r\n        }).catch((err) => {\r\n            swal(err)\r\n        })\r\n        }\r\n    }\r\n\r\n   \r\n  return (\r\n    <div >\r\n    <div className=\"login-container \"  >\r\n\t<form action=\"\" Class=\"form-login\" style={{height:\"80%\"}}>\r\n\t\t<ul Class=\"login-nav\">\r\n\t\t\t<li Class=\"login-nav__item active \">\r\n\t\t\t<Link to =\"/\">Sign in</Link>\r\n\t\t\t</li>\r\n\t\t\t<li Class=\"login-nav__item \">\r\n\t\t\t<Link to = \"/Register\">SignUp</Link>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t\t<label for=\"login-input-user\" Class=\"login__label\">\r\n\t\t\tEmail\r\n\t\t</label>\r\n\t\t<input id=\"login-input-user\" Class=\"login__input\" name=\"email\" value={user.email} type=\"text\" onChange={handleChange} />\r\n        {emailErr?<p style={{color:\"red\"}}>Please Enter Valid Email</p>:false}\r\n\t\t<label for=\"login-input-password\" Class=\"login__label\">\r\n\t\t\tPassword\r\n\t\t</label>\r\n\t\t<input id=\"login-input-password\" Class=\"login__input\" name=\"password\" value={user.password} type=\"password\" onChange={handleChange} />\r\n        {passwordErr?<p style={{color:\"red\"}}>Please Enter Valid Password</p>:false}\r\n\t\t\r\n\t\t<button Class=\"login__submit\" onClick={login}>Sign in</button>\r\n\t</form>\r\n\t\r\n</div>\r\n</div>\r\n  )\r\n}\r\n",[],"C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\components\\Register.js",["50","51","52"],[],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport {useState} from \"react\"\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport swal from 'sweetalert';\r\nexport default function Register() {\r\n    const navigate = useNavigate()\r\n    // Declared state for user details which is passed payload to register api\r\n    const [user, setUser] = useState({\r\n        uname: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confPass: \"\",\r\n        mobile: \"\",\r\n    })\r\n    \r\n    //Frontend error messages states declared here\r\n\r\n    const [uErr, setuErr] = useState(false)\r\n    const [emailerr, setEmailerr] = useState(false)\r\n    const [moErr, setMoerr] = useState(false)\r\n    const [pwdErr, setPwdErr] = useState(false)\r\n    const [confPwdErr, setConfPwdErr] = useState(false)\r\n    \r\n    //Here is onChnage function of register form taking input here\r\n\r\n    const handleChange = (e) =>{\r\n        const { name, value } = e.target\r\n        setUser({\r\n            ...user,\r\n            [name]: value,\r\n        \r\n    })\r\n    setuErr(false)\r\n    setEmailerr(false)\r\n    setMoerr(false)\r\n    setPwdErr(false)\r\n    setConfPwdErr(false)\r\n}\r\n\r\n// function for registering new user in database\r\n\r\nconst register = (e) =>{\r\n    e.preventDefault()\r\n\r\n    //Declared here regular expressions variables for validating register form field\r\n\r\n    const URegex=/^[a-zA-Z]+$/\r\n    const eRegex= /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/\r\n    const pwdRegex=/^(?=.{8,})(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).*$/\r\n    const mobRegex=/[6789][0-9]{9}/\r\n\r\n    //Testing register form validations from here\r\n\r\n    if (user.uname === \"\" || !URegex.test(user.uname)) {\r\n        setuErr(true)\r\n    }\r\n    else if (user.email === \"\" || !eRegex.test(user.email)) {\r\n        setEmailerr(true)       \r\n    }\r\n    \r\n    else if (user.password === \"\" || !pwdRegex.test(user.password)) {\r\n        setPwdErr(true)       \r\n    }\r\n    else if (user.confPass === \"\" || user.password !== user.confPass) {\r\n        setConfPwdErr(true)\r\n    }\r\n    else{\r\n        const { uname, email, password, confPass, mobile} = user\r\n        if (uname && email && password && confPass && (password === confPass)) {\r\n\r\n            //Making http post request using axios to registering new user in system\r\n\r\n            return axios.post('http://localhost:8081/register', user, { validateStatus: false }).then((res) => {\r\n                if (res.data.statusCode === 201) {\r\n                    swal(res.data.message ,\"success\")\r\n                    \r\n                    navigate('/')\r\n\r\n\r\n                } else {\r\n                    swal(res.data.message)\r\n                }\r\n\r\n            }).catch((err) => {\r\n                alert(err)\r\n            })\r\n        }\r\n        else {\r\n            swal('invalid input, please try again')\r\n        }\r\n    }\r\n    }\r\n\r\n  return (\r\n    <div className='bg '>\r\n         <ToastContainer />\r\n\r\n         <div class=\"login-container\">\r\n\t<form action=\"\" class=\"form-login\">\r\n\t\t<ul class=\"login-nav\">\r\n\t\t\t<li class=\"login-nav__item \">\r\n\t\t\t<Link to =\"/\">Sign in</Link>\r\n\t\t\t</li>\r\n\t\t\t<li class=\"login-nav__item active\">\r\n\t\t\t\t<Link to = \"/Signup\">SignUp</Link>\r\n\t\t\t</li>\r\n\t\t\t\r\n\t\t</ul>\r\n\t\t<label for=\"login-input-user\" class=\"login__label\">\r\n\t\t\tUsername *\r\n\t\t</label>\r\n\t\t<input id=\"login-input-user\" class=\"login__input\" type=\"text\" name=\"uname\" value={user.uname} onChange={handleChange} />\r\n{uErr ? <p style={{color:\"red\"}}>Please enter valid Username</p> : false}\r\n\t\t<label for=\"login-input-password\" class=\"login__label\">\r\n\t\t\tEmail *\r\n\t\t</label>\r\n\t\t<input id=\"login-input-user\" class=\"login__input\" type=\"email\" name=\"email\" value={user.email}  onChange={handleChange}/>\r\n        {emailerr?<p style={{color:\"red\"}}>Please enter valid Email</p>:false}\r\n\t\t<label for=\"login-input-password\" class=\"login__label\">\r\n\t\t\tPhone Number *\r\n\t\t</label>\r\n\t\t<input id=\"login-input-user\" class=\"login__input\" type=\"number\" name=\"mobile\" value={user.mobile} onChange={handleChange}/>\r\n        {moErr?<p style={{color:\"red\"}}>Please enter valid mobile number</p>:false}\r\n\t\t<label for=\"login-input-password\" class=\"login__label\">\r\n\t\t\tPassword *\r\n\t\t</label>\r\n\t\t<input id=\"login-input-user\" class=\"login__input\" type=\"password\" name=\"password\" value={user.password} onChange={handleChange}/>\r\n        {pwdErr?<p style={{color:\"red\"}}>Password should content one upper case, number and special charector</p>:false}\r\n\t\t<label for=\"login-input-password\" class=\"login__label\">\r\n\t\t\tConfirm Password *\r\n\t\t</label>\r\n\t\t<input id=\"login-input-password\" class=\"login__input\" type=\"password\" name=\"confPass\" value={user.confPass} onChange={handleChange}/>\r\n        {confPwdErr?<p style={{color:\"red\"}}>password and confirm password should match</p>:false}\r\n\t\t<button class=\"login__submit\" onClick={register} >Register</button>\r\n\t</form>\r\n\t\r\n</div>\r\n  )\r\n\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\services\\login.js",[],[],"C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\components\\Header.js",["53"],[],"C:\\Users\\admin\\Desktop\\Blog_app\\frontend\\src\\components\\Addpatient.js",["54","55"],[],{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":13,"column":8,"nodeType":"58","messageId":"59","endLine":13,"endColumn":14},{"ruleId":"56","severity":1,"message":"61","line":46,"column":23,"nodeType":"58","messageId":"59","endLine":46,"endColumn":29},{"ruleId":"56","severity":1,"message":"62","line":48,"column":23,"nodeType":"58","messageId":"59","endLine":48,"endColumn":27},{"ruleId":"56","severity":1,"message":"63","line":6,"column":26,"nodeType":"58","messageId":"59","endLine":6,"endColumn":31},{"ruleId":"56","severity":1,"message":"64","line":54,"column":11,"nodeType":"58","messageId":"59","endLine":54,"endColumn":19},{"ruleId":"56","severity":1,"message":"65","line":72,"column":51,"nodeType":"58","messageId":"59","endLine":72,"endColumn":57},{"ruleId":"56","severity":1,"message":"66","line":24,"column":9,"nodeType":"58","messageId":"59","endLine":24,"endColumn":15},{"ruleId":"67","severity":1,"message":"68","line":125,"column":6,"nodeType":"69","endLine":125,"endColumn":12,"suggestions":"70"},{"ruleId":"56","severity":1,"message":"71","line":163,"column":11,"nodeType":"58","messageId":"59","endLine":163,"endColumn":16},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'record' is assigned a value but never used.","'user' is assigned a value but never used.","'toast' is defined but never used.","'mobRegex' is assigned a value but never used.","'mobile' is assigned a value but never used.","'userId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["72"],"'token' is assigned a value but never used.",{"desc":"73","fix":"74"},"Update the dependencies array to be: [flag, userId]",{"range":"75","text":"76"},[3140,3146],"[flag, userId]"]